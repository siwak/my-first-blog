To create a virtual environment (venv):
   "c:\python34\python -m venv myvenv", der myvenv er navnet på miljøet

To start the environment when you work on it:
   "myvenv\scripts\activate"

To create a project in our environment:
   stand on (myvenv): django-admin.py startproject mysite .

To create a database for our project:
   python manage.py migrate

To start the web server:
   python manage.py runserver

The website will then be on:
   http://127.0.0.1:8000/

To create a new app:
   python manage.py startapp blog

Add the app to djangos setting, setting.py:
   Add to INSTALLED_APPS

When new models, create migration script:
   python manage.py makemigrations blog

To apply to the database:
   python manage.py migrate blog

To use Django admin, register the model in admin.py
Admin: http://127.0.0.1:8000/admin/

To create a superuser:
   python manage.py createsuperuser

Git repository for the project:
   git init
   git config --global user.name "sikrno"
   git config --global user.email siw_annie@hotmail.com

   .gitignore file tells git which files to ignore

   git status - return changes
   git add -A .
   git commit -m "a comment"

Git user account:
   username: siwak
   password: AndNur01

PythonAnywhere: (where we host our server)
   www.pythonanywhere.com
   username: siwannie
   password: AndNur01
   dos-equivalent is "Bash" under consoles

   to pull donw our code from GitHub:
   git clone https://github.com/siwak/my-first-blog.git

   create a virtualenv:
      cd my-first-blog
      virtualenv --python=python3.4 myvenv
      source myvenv/fin/activate - activates myvenv
      pip install django whitenoise - whitenoise has to do with static files
      python manage.py collectstatic

   create the database (as before):
      python manage.py migrate
      python manage.py createsuperuser

   publish our web:
      pythonanywhere - web - add a new web app, choose manual and python3.4

      









